// Generated by CoffeeScript 1.8.0
(function() {
  var Animal, Horse, Snake, age, ages, awardMedals, bitlist, changeNumbers, child, contenders, copy, countdown, courses, cube, date, dish, eldest, end, evens, filename, fill, food, foods, footprints, gold, grade, i, inner, kids, lyrics, middle, mood, num, numbers, outer, rest, sam, say, silver, singers, solipsism, song, speed, square, start, tom, volume, winner, x, yearsOld, zip, _fn, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2,
    __slice = [].slice,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  say = function() {
    return "Say what ?";
  };

  square = function(x) {
    return x * x;
  };

  cube = function(x) {
    return square(x) * x;
  };

  fill = function(container, liquid) {
    if (liquid == null) {
      liquid = "coffee";
    }
    return "Filling the " + container + " with " + liquid + "...";
  };

  song = ["do", "re", "mi", "fa", "so"];

  singers = {
    Jagger: "Rock",
    Elvis: "Roll"
  };

  bitlist = [1, 0, 1];

  kids = {
    brother: {
      name: "Max",
      age: 11
    },
    sister: {
      name: "Tda",
      age: 9
    }
  };

  $('.account').attr({
    "class": 'active'
  });

  log(object["class"]);

  outer = 1;

  changeNumbers = function() {
    var inner;
    inner = -1;
    return outer = 10;
  };

  inner = changeNumbers();

  if (singing) {
    mood = greatlyImproved;
  }

  if (happy && knowsIt) {
    clapsHands();
    chaChaCha();
  } else {
    showIt();
  }

  date = friday ? sue : jill;

  gold = silver = rest = "unknown";

  awardMedals = function() {
    var first, others, second;
    first = arguments[0], second = arguments[1], others = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
    gold = first;
    silver = second;
    return rest = others;
  };

  contenders = ["Michael Phelps", "Liu Xiang", "Yao Ming", "Allyson Felix", "Shawn Johnson", "Roman Sebrle", "Guo Jingjing", "Tyson Gay", "Asafa Powell", "Usain Bolt"];

  awardMedals.apply(null, contenders);

  alert("Gold: " + gold);

  alert("Silver: " + silver);

  alert("The Field: " + rest);

  _ref = ['toast', 'cheese', 'wine'];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    food = _ref[_i];
    eat(food);
  }

  courses = ['greens', 'caviar', 'truffles'];

  for (i = _j = 0, _len1 = courses.length; _j < _len1; i = ++_j) {
    dish = courses[i];
    menu(i + 1, dish);
  }

  foods = ['broccoli', 'spinach', 'chocolate'];

  for (_k = 0, _len2 = foods.length; _k < _len2; _k++) {
    food = foods[_k];
    if (food !== 'chocolate') {
      eat(food);
    }
  }

  countdown = (function() {
    var _l, _results;
    _results = [];
    for (num = _l = 10; _l >= 1; num = --_l) {
      _results.push(num);
    }
    return _results;
  })();

  evens = (function() {
    var _l, _results;
    _results = [];
    for (x = _l = 0; _l <= 10; x = _l += 2) {
      _results.push(x);
    }
    return _results;
  })();

  yearsOld = {
    max: 10,
    ida: 9,
    tim: 11
  };

  ages = (function() {
    var _results;
    _results = [];
    for (child in yearsOld) {
      age = yearsOld[child];
      _results.push("" + child + " is " + age);
    }
    return _results;
  })();

  if (this.studyingEconomics) {
    while (supply > demand) {
      buy();
    }
    while (!(supply > demand)) {
      sell();
    }
  }

  num = 6;

  lyrics = (function() {
    var _results;
    _results = [];
    while (num -= 1) {
      _results.push("" + num + " little monkeys, jumping on the bed. One fell out and bumped his head.");
    }
    return _results;
  })();

  _fn = function(filename) {
    return fs.readFile(filename, function(err, contents) {
      return compile(filename, contents.toString());
    });
  };
  for (_l = 0, _len3 = list.length; _l < _len3; _l++) {
    filename = list[_l];
    _fn(filename);
  }

  numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];

  start = numbers.slice(0, 3);

  middle = numbers.slice(3, -2);

  end = numbers.slice(-2);

  copy = numbers.slice(0);

  numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];

  [].splice.apply(numbers, [3, 4].concat(_ref1 = [-3, -4, -5, -6])), _ref1;

  grade = function(student) {
    if (student.excellentWork) {
      return "A+";
    } else if (student.okayStuff) {
      if (student.triedHard) {
        return "B";
      } else {
        return "B-";
      }
    } else {
      return "C";
    }
  };

  eldest = 24 > 21 ? "Liz" : "Ike";

  if (ignition === true) {
    launch();
  }

  if (band !== SpinalTap) {
    volume = 10;
  }

  if (answer !== false) {
    letTheWildRumpusBegin();
  }

  if (car.speed < limit) {
    accelerate();
  }

  if (pick === 47 || pick === 92 || pick === 13) {
    winner = true;
  }

  print(inspect("My name is " + this.name));

  if ((typeof mind !== "undefined" && mind !== null) && (typeof world === "undefined" || world === null)) {
    solipsism = true;
  }

  speed = 0;

  if (speed == null) {
    speed = 15;
  }

  footprints = typeof yeti !== "undefined" && yeti !== null ? yeti : "bear";

  zip = typeof lottery.drawWinner === "function" ? (_ref2 = lottery.drawWinner().address) != null ? _ref2.zipcode : void 0 : void 0;

  Animal = (function() {
    function Animal(name) {
      this.name = name;
    }

    Animal.prototype.move = function(meters) {
      return alert(this.name + (" moved " + meters + "m."));
    };

    return Animal;

  })();

  Snake = (function(_super) {
    __extends(Snake, _super);

    function Snake() {
      return Snake.__super__.constructor.apply(this, arguments);
    }

    Snake.prototype.move = function() {
      alert("Slithering...");
      return Snake.__super__.move.call(this, 5);
    };

    return Snake;

  })(Animal);

  Horse = (function(_super) {
    __extends(Horse, _super);

    function Horse() {
      return Horse.__super__.constructor.apply(this, arguments);
    }

    Horse.prototype.move = function() {
      alert("Galloping...");
      return Horse.__super__.move.call(this, 45);
    };

    return Horse;

  })(Animal);

  sam = new Snake("Sammy the Python");

  tom = new Horse("Tommy the Palomino");

  sam.move();

  tom.move();

  String.prototype.dasherize = function() {
    return this.replace(/_/g, "-");
  };

}).call(this);
